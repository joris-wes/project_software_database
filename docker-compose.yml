version: '3'

services:

  proxy:
    image: nginx:1.17.6-alpine
    volumes:
      - type: bind
        source: ./proxy/nginx.conf
        target: /etc/nginx/conf.d/default.conf
        read_only: true
    ports:
      - 80:80
    networks:
      - client
    depends_on:
      - frontend
      - backend

  couchdb:
    image: treehouses/couchdb:2.3.0
    restart: always
    environment:
      - COUCHDB_USER=${COUCHDB_USER:-admin}
      - COUCHDB_PASSWORD=${COUCHDB_PASSWORD:-password}
    ports:
      - 5984:5984
    volumes:
      - couchdb_data:/opt/couchdb/data
    networks:
      - database

  backend:
    build:
      context: backend
      target: builder
    restart: always
    environment:
      - COUCHDB_USER=${COUCHDB_USER:-admin}
      - COUCHDB_PASSWORD=${COUCHDB_PASSWORD:-password}
      - GIN_MODE=release
    ports:
      - 8080:9000
    depends_on:
      - couchdb
    networks:
      - database
      - client

  listener:
    build:
      context: listener
      target: builder
    restart: always
    environment:
      - COUCHDB_USER=${COUCHDB_USER:-admin}
      - COUCHDB_PASSWORD=${COUCHDB_PASSWORD:-password}
      - MQTT_URL=${MQTT_URL:-example.com}
      - MQTT_USER=${MQTT_USER:-user}
      - MQTT_PASSWORD=${MQTT_PASSWORD:-password}
    depends_on:
      - couchdb
    networks:
      - database

  frontend:
    build:
      context: frontend
      target: builder
    restart: always
    ports:
      - 3000:3000
    depends_on:
      - backend
    networks:
      - client

networks:
  database:
    driver: bridge
  client:
    driver: bridge

volumes:
  couchdb_data:
    driver: local